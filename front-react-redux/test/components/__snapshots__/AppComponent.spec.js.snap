exports[`test renders properly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Paper
    circle={false}
    rounded={true}
    transitionEnabled={true}
    zDepth={2}>
    <AppBar
        iconElementRight={
            <FlatButton
                disabled={false}
                fullWidth={false}
                label="Logout"
                labelPosition="after"
                labelStyle={Object {}}
                onClick={[Function]}
                onKeyboardFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onTouchStart={[Function]}
                primary={false}
                secondary={false} />
        }
        showMenuIconButton={false}
        title="TODO Project"
        zDepth={1} />
    <Connect(TodoListComponent) />
    <Connect(TodoAddComponent) />
    <Connect(TodoFilterComponent) />
</Paper>,
  "nodes": Array [
    <Paper
      circle={false}
      rounded={true}
      transitionEnabled={true}
      zDepth={2}>
      <AppBar
            iconElementRight={
                  <FlatButton
                        disabled={false}
                        fullWidth={false}
                        label="Logout"
                        labelPosition="after"
                        labelStyle={Object {}}
                        onClick={[Function]}
                        onKeyboardFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                        primary={false}
                        secondary={false} />
            }
            showMenuIconButton={false}
            title="TODO Project"
            zDepth={1} />
      <Connect(TodoListComponent) />
      <Connect(TodoAddComponent) />
      <Connect(TodoFilterComponent) />
</Paper>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <AppComponent />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": AppComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Paper
          circle={false}
          rounded={true}
          transitionEnabled={true}
          zDepth={2}>
          <AppBar
                    iconElementRight={
                              <FlatButton
                                        disabled={false}
                                        fullWidth={false}
                                        label="Logout"
                                        labelPosition="after"
                                        labelStyle={Object {}}
                                        onClick={[Function]}
                                        onKeyboardFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        onTouchStart={[Function]}
                                        primary={false}
                                        secondary={false} />
                    }
                    showMenuIconButton={false}
                    title="TODO Project"
                    zDepth={1} />
          <Connect(TodoListComponent) />
          <Connect(TodoAddComponent) />
          <Connect(TodoFilterComponent) />
</Paper>,
        "_debugID": 2,
        "_renderedOutput": <Paper
          circle={false}
          rounded={true}
          transitionEnabled={true}
          zDepth={2}>
          <AppBar
                    iconElementRight={
                              <FlatButton
                                        disabled={false}
                                        fullWidth={false}
                                        label="Logout"
                                        labelPosition="after"
                                        labelStyle={Object {}}
                                        onClick={[Function]}
                                        onKeyboardFocus={[Function]}
                                        onMouseEnter={[Function]}
                                        onMouseLeave={[Function]}
                                        onTouchStart={[Function]}
                                        primary={false}
                                        secondary={false} />
                    }
                    showMenuIconButton={false}
                    title="TODO Project"
                    zDepth={1} />
          <Connect(TodoListComponent) />
          <Connect(TodoAddComponent) />
          <Connect(TodoFilterComponent) />
</Paper>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AppComponent />,
}
`;
